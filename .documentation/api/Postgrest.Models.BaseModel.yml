### YamlMime:ManagedReference
items:
- uid: Postgrest.Models.BaseModel
  commentId: T:Postgrest.Models.BaseModel
  id: BaseModel
  parent: Postgrest.Models
  children:
  - Postgrest.Models.BaseModel.Delete``1
  - Postgrest.Models.BaseModel.PrimaryKeyColumn
  - Postgrest.Models.BaseModel.PrimaryKeyValue
  - Postgrest.Models.BaseModel.Update``1
  langs:
  - csharp
  - vb
  name: BaseModel
  nameWithType: BaseModel
  fullName: Postgrest.Models.BaseModel
  type: Class
  source:
    remote:
      path: Postgrest/Models/BaseModel.cs
      branch: master
      repo: https://github.com/supabase/postgrest-csharp.git
    id: BaseModel
    path: Postgrest/Models/BaseModel.cs
    startLine: 11
  assemblies:
  - Postgrest
  namespace: Postgrest.Models
  summary: "\nAbstract class that must be implemented by C# Postgrest Models.\n"
  example: []
  syntax:
    content: public abstract class BaseModel
    content.vb: Public MustInherit Class BaseModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Postgrest.Models.BaseModel.Update``1
  commentId: M:Postgrest.Models.BaseModel.Update``1
  id: Update``1
  parent: Postgrest.Models.BaseModel
  langs:
  - csharp
  - vb
  name: Update<T>()
  nameWithType: BaseModel.Update<T>()
  fullName: Postgrest.Models.BaseModel.Update<T>()
  type: Method
  source:
    remote:
      path: Postgrest/Models/BaseModel.cs
      branch: master
      repo: https://github.com/supabase/postgrest-csharp.git
    id: Update
    path: Postgrest/Models/BaseModel.cs
    startLine: 13
  assemblies:
  - Postgrest
  namespace: Postgrest.Models
  syntax:
    content: >-
      public virtual Task<ModeledResponse<T>> Update<T>()

          where T : BaseModel, new()
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{Postgrest.Responses.ModeledResponse{{T}}}
    content.vb: Public Overridable Function Update(Of T As {BaseModel, New}) As Task(Of ModeledResponse(Of T))
  overload: Postgrest.Models.BaseModel.Update*
  nameWithType.vb: BaseModel.Update(Of T)()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Postgrest.Models.BaseModel.Update(Of T)()
  name.vb: Update(Of T)()
- uid: Postgrest.Models.BaseModel.Delete``1
  commentId: M:Postgrest.Models.BaseModel.Delete``1
  id: Delete``1
  parent: Postgrest.Models.BaseModel
  langs:
  - csharp
  - vb
  name: Delete<T>()
  nameWithType: BaseModel.Delete<T>()
  fullName: Postgrest.Models.BaseModel.Delete<T>()
  type: Method
  source:
    remote:
      path: Postgrest/Models/BaseModel.cs
      branch: master
      repo: https://github.com/supabase/postgrest-csharp.git
    id: Delete
    path: Postgrest/Models/BaseModel.cs
    startLine: 14
  assemblies:
  - Postgrest
  namespace: Postgrest.Models
  syntax:
    content: >-
      public virtual Task Delete<T>()

          where T : BaseModel, new()
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function Delete(Of T As {BaseModel, New}) As Task
  overload: Postgrest.Models.BaseModel.Delete*
  nameWithType.vb: BaseModel.Delete(Of T)()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Postgrest.Models.BaseModel.Delete(Of T)()
  name.vb: Delete(Of T)()
- uid: Postgrest.Models.BaseModel.PrimaryKeyValue
  commentId: P:Postgrest.Models.BaseModel.PrimaryKeyValue
  id: PrimaryKeyValue
  parent: Postgrest.Models.BaseModel
  langs:
  - csharp
  - vb
  name: PrimaryKeyValue
  nameWithType: BaseModel.PrimaryKeyValue
  fullName: Postgrest.Models.BaseModel.PrimaryKeyValue
  type: Property
  source:
    remote:
      path: Postgrest/Models/BaseModel.cs
      branch: master
      repo: https://github.com/supabase/postgrest-csharp.git
    id: PrimaryKeyValue
    path: Postgrest/Models/BaseModel.cs
    startLine: 19
  assemblies:
  - Postgrest
  namespace: Postgrest.Models
  summary: "\nGets the value of the PrimaryKey from a model&apos;s instance as defined by the [PrimaryKey] attribute on a property on the model.\n"
  example: []
  syntax:
    content: public object PrimaryKeyValue { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property PrimaryKeyValue As Object
  overload: Postgrest.Models.BaseModel.PrimaryKeyValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Postgrest.Models.BaseModel.PrimaryKeyColumn
  commentId: P:Postgrest.Models.BaseModel.PrimaryKeyColumn
  id: PrimaryKeyColumn
  parent: Postgrest.Models.BaseModel
  langs:
  - csharp
  - vb
  name: PrimaryKeyColumn
  nameWithType: BaseModel.PrimaryKeyColumn
  fullName: Postgrest.Models.BaseModel.PrimaryKeyColumn
  type: Property
  source:
    remote:
      path: Postgrest/Models/BaseModel.cs
      branch: master
      repo: https://github.com/supabase/postgrest-csharp.git
    id: PrimaryKeyColumn
    path: Postgrest/Models/BaseModel.cs
    startLine: 41
  assemblies:
  - Postgrest
  namespace: Postgrest.Models
  summary: "\nGets the name of the PrimaryKey column on a model&apos;s instance as defined by the [PrimaryKey] attribute on a property on the model.\n"
  example: []
  syntax:
    content: public string PrimaryKeyColumn { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PrimaryKeyColumn As String
  overload: Postgrest.Models.BaseModel.PrimaryKeyColumn*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Postgrest.Models
  commentId: N:Postgrest.Models
  name: Postgrest.Models
  nameWithType: Postgrest.Models
  fullName: Postgrest.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Postgrest.Models.BaseModel.Update*
  commentId: Overload:Postgrest.Models.BaseModel.Update
  name: Update
  nameWithType: BaseModel.Update
  fullName: Postgrest.Models.BaseModel.Update
- uid: System.Threading.Tasks.Task{Postgrest.Responses.ModeledResponse{{T}}}
  commentId: T:System.Threading.Tasks.Task{Postgrest.Responses.ModeledResponse{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ModeledResponse<T>>
  nameWithType: Task<ModeledResponse<T>>
  fullName: System.Threading.Tasks.Task<Postgrest.Responses.ModeledResponse<T>>
  nameWithType.vb: Task(Of ModeledResponse(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of Postgrest.Responses.ModeledResponse(Of T))
  name.vb: Task(Of ModeledResponse(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Postgrest.Responses.ModeledResponse`1
    name: ModeledResponse
    nameWithType: ModeledResponse
    fullName: Postgrest.Responses.ModeledResponse
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Postgrest.Responses.ModeledResponse`1
    name: ModeledResponse
    nameWithType: ModeledResponse
    fullName: Postgrest.Responses.ModeledResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Postgrest.Models.BaseModel.Delete*
  commentId: Overload:Postgrest.Models.BaseModel.Delete
  name: Delete
  nameWithType: BaseModel.Delete
  fullName: Postgrest.Models.BaseModel.Delete
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Postgrest.Models.BaseModel.PrimaryKeyValue*
  commentId: Overload:Postgrest.Models.BaseModel.PrimaryKeyValue
  name: PrimaryKeyValue
  nameWithType: BaseModel.PrimaryKeyValue
  fullName: Postgrest.Models.BaseModel.PrimaryKeyValue
- uid: Postgrest.Models.BaseModel.PrimaryKeyColumn*
  commentId: Overload:Postgrest.Models.BaseModel.PrimaryKeyColumn
  name: PrimaryKeyColumn
  nameWithType: BaseModel.PrimaryKeyColumn
  fullName: Postgrest.Models.BaseModel.PrimaryKeyColumn
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
