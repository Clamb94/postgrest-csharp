### YamlMime:ManagedReference
items:
- uid: Postgrest.Responses.ModeledResponse`1
  commentId: T:Postgrest.Responses.ModeledResponse`1
  id: ModeledResponse`1
  parent: Postgrest.Responses
  children:
  - Postgrest.Responses.ModeledResponse`1.#ctor(Postgrest.Responses.BaseResponse,System.Boolean)
  - Postgrest.Responses.ModeledResponse`1.Models
  langs:
  - csharp
  - vb
  name: ModeledResponse<T>
  nameWithType: ModeledResponse<T>
  fullName: Postgrest.Responses.ModeledResponse<T>
  type: Class
  source:
    remote:
      path: Postgrest/Responses/ModeledResponse.cs
      branch: master
      repo: https://github.com/supabase/postgrest-csharp.git
    id: ModeledResponse
    path: Postgrest/Responses/ModeledResponse.cs
    startLine: 12
  assemblies:
  - Postgrest
  namespace: Postgrest.Responses
  summary: "\nA representation of a successful Postgrest response that transforms the string response into a C# Modelled response.\n"
  example: []
  syntax:
    content: 'public class ModeledResponse<T> : BaseResponse'
    typeParameters:
    - id: T
      description: ''
    content.vb: >-
      Public Class ModeledResponse(Of T)

          Inherits BaseResponse
  inheritance:
  - System.Object
  - Postgrest.Responses.BaseResponse
  inheritedMembers:
  - Postgrest.Responses.BaseResponse.ResponseMessage
  - Postgrest.Responses.BaseResponse.Content
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ModeledResponse(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Postgrest.Responses.ModeledResponse(Of T)
  name.vb: ModeledResponse(Of T)
- uid: Postgrest.Responses.ModeledResponse`1.Models
  commentId: P:Postgrest.Responses.ModeledResponse`1.Models
  id: Models
  parent: Postgrest.Responses.ModeledResponse`1
  langs:
  - csharp
  - vb
  name: Models
  nameWithType: ModeledResponse<T>.Models
  fullName: Postgrest.Responses.ModeledResponse<T>.Models
  type: Property
  source:
    remote:
      path: Postgrest/Responses/ModeledResponse.cs
      branch: master
      repo: https://github.com/supabase/postgrest-csharp.git
    id: Models
    path: Postgrest/Responses/ModeledResponse.cs
    startLine: 14
  assemblies:
  - Postgrest
  namespace: Postgrest.Responses
  syntax:
    content: public List<T> Models { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: Public ReadOnly Property Models As List(Of T)
  overload: Postgrest.Responses.ModeledResponse`1.Models*
  nameWithType.vb: ModeledResponse(Of T).Models
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Postgrest.Responses.ModeledResponse(Of T).Models
- uid: Postgrest.Responses.ModeledResponse`1.#ctor(Postgrest.Responses.BaseResponse,System.Boolean)
  commentId: M:Postgrest.Responses.ModeledResponse`1.#ctor(Postgrest.Responses.BaseResponse,System.Boolean)
  id: '#ctor(Postgrest.Responses.BaseResponse,System.Boolean)'
  parent: Postgrest.Responses.ModeledResponse`1
  langs:
  - csharp
  - vb
  name: ModeledResponse(BaseResponse, Boolean)
  nameWithType: ModeledResponse<T>.ModeledResponse(BaseResponse, Boolean)
  fullName: Postgrest.Responses.ModeledResponse<T>.ModeledResponse(Postgrest.Responses.BaseResponse, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Postgrest/Responses/ModeledResponse.cs
      branch: master
      repo: https://github.com/supabase/postgrest-csharp.git
    id: .ctor
    path: Postgrest/Responses/ModeledResponse.cs
    startLine: 16
  assemblies:
  - Postgrest
  namespace: Postgrest.Responses
  syntax:
    content: public ModeledResponse(BaseResponse baseResponse, bool shouldParse = true)
    parameters:
    - id: baseResponse
      type: Postgrest.Responses.BaseResponse
    - id: shouldParse
      type: System.Boolean
    content.vb: Public Sub New(baseResponse As BaseResponse, shouldParse As Boolean = True)
  overload: Postgrest.Responses.ModeledResponse`1.#ctor*
  nameWithType.vb: ModeledResponse(Of T).ModeledResponse(BaseResponse, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Postgrest.Responses.ModeledResponse(Of T).ModeledResponse(Postgrest.Responses.BaseResponse, System.Boolean)
references:
- uid: Postgrest.Responses
  commentId: N:Postgrest.Responses
  name: Postgrest.Responses
  nameWithType: Postgrest.Responses
  fullName: Postgrest.Responses
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Postgrest.Responses.BaseResponse
  commentId: T:Postgrest.Responses.BaseResponse
  parent: Postgrest.Responses
  name: BaseResponse
  nameWithType: BaseResponse
  fullName: Postgrest.Responses.BaseResponse
- uid: Postgrest.Responses.BaseResponse.ResponseMessage
  commentId: P:Postgrest.Responses.BaseResponse.ResponseMessage
  parent: Postgrest.Responses.BaseResponse
  name: ResponseMessage
  nameWithType: BaseResponse.ResponseMessage
  fullName: Postgrest.Responses.BaseResponse.ResponseMessage
- uid: Postgrest.Responses.BaseResponse.Content
  commentId: P:Postgrest.Responses.BaseResponse.Content
  parent: Postgrest.Responses.BaseResponse
  name: Content
  nameWithType: BaseResponse.Content
  fullName: Postgrest.Responses.BaseResponse.Content
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Postgrest.Responses.ModeledResponse`1.Models*
  commentId: Overload:Postgrest.Responses.ModeledResponse`1.Models
  name: Models
  nameWithType: ModeledResponse<T>.Models
  fullName: Postgrest.Responses.ModeledResponse<T>.Models
  nameWithType.vb: ModeledResponse(Of T).Models
  fullName.vb: Postgrest.Responses.ModeledResponse(Of T).Models
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Postgrest.Responses.ModeledResponse`1.#ctor*
  commentId: Overload:Postgrest.Responses.ModeledResponse`1.#ctor
  name: ModeledResponse
  nameWithType: ModeledResponse<T>.ModeledResponse
  fullName: Postgrest.Responses.ModeledResponse<T>.ModeledResponse
  nameWithType.vb: ModeledResponse(Of T).ModeledResponse
  fullName.vb: Postgrest.Responses.ModeledResponse(Of T).ModeledResponse
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
