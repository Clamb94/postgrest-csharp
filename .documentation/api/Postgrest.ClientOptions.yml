### YamlMime:ManagedReference
items:
- uid: Postgrest.ClientOptions
  commentId: T:Postgrest.ClientOptions
  id: ClientOptions
  parent: Postgrest
  children:
  - Postgrest.ClientOptions.DateTimeFormat
  - Postgrest.ClientOptions.DateTimeStyles
  - Postgrest.ClientOptions.Headers
  - Postgrest.ClientOptions.QueryParams
  - Postgrest.ClientOptions.Schema
  langs:
  - csharp
  - vb
  name: ClientOptions
  nameWithType: ClientOptions
  fullName: Postgrest.ClientOptions
  type: Class
  source:
    remote:
      path: Postgrest/ClientOptions.cs
      branch: master
      repo: https://github.com/supabase/postgrest-csharp.git
    id: ClientOptions
    path: Postgrest/ClientOptions.cs
    startLine: 5
  assemblies:
  - Postgrest
  namespace: Postgrest
  syntax:
    content: public class ClientOptions
    content.vb: Public Class ClientOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Postgrest.ClientOptions.Schema
  commentId: P:Postgrest.ClientOptions.Schema
  id: Schema
  parent: Postgrest.ClientOptions
  langs:
  - csharp
  - vb
  name: Schema
  nameWithType: ClientOptions.Schema
  fullName: Postgrest.ClientOptions.Schema
  type: Property
  source:
    remote:
      path: Postgrest/ClientOptions.cs
      branch: master
      repo: https://github.com/supabase/postgrest-csharp.git
    id: Schema
    path: Postgrest/ClientOptions.cs
    startLine: 7
  assemblies:
  - Postgrest
  namespace: Postgrest
  syntax:
    content: public string Schema { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Schema As String
  overload: Postgrest.ClientOptions.Schema*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Postgrest.ClientOptions.DateTimeStyles
  commentId: F:Postgrest.ClientOptions.DateTimeStyles
  id: DateTimeStyles
  parent: Postgrest.ClientOptions
  langs:
  - csharp
  - vb
  name: DateTimeStyles
  nameWithType: ClientOptions.DateTimeStyles
  fullName: Postgrest.ClientOptions.DateTimeStyles
  type: Field
  source:
    remote:
      path: Postgrest/ClientOptions.cs
      branch: master
      repo: https://github.com/supabase/postgrest-csharp.git
    id: DateTimeStyles
    path: Postgrest/ClientOptions.cs
    startLine: 8
  assemblies:
  - Postgrest
  namespace: Postgrest
  syntax:
    content: public DateTimeStyles DateTimeStyles
    return:
      type: System.Globalization.DateTimeStyles
    content.vb: Public DateTimeStyles As DateTimeStyles
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Postgrest.ClientOptions.DateTimeFormat
  commentId: F:Postgrest.ClientOptions.DateTimeFormat
  id: DateTimeFormat
  parent: Postgrest.ClientOptions
  langs:
  - csharp
  - vb
  name: DateTimeFormat
  nameWithType: ClientOptions.DateTimeFormat
  fullName: Postgrest.ClientOptions.DateTimeFormat
  type: Field
  source:
    remote:
      path: Postgrest/ClientOptions.cs
      branch: master
      repo: https://github.com/supabase/postgrest-csharp.git
    id: DateTimeFormat
    path: Postgrest/ClientOptions.cs
    startLine: 9
  assemblies:
  - Postgrest
  namespace: Postgrest
  syntax:
    content: public string DateTimeFormat
    return:
      type: System.String
    content.vb: Public DateTimeFormat As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Postgrest.ClientOptions.Headers
  commentId: P:Postgrest.ClientOptions.Headers
  id: Headers
  parent: Postgrest.ClientOptions
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: ClientOptions.Headers
  fullName: Postgrest.ClientOptions.Headers
  type: Property
  source:
    remote:
      path: Postgrest/ClientOptions.cs
      branch: master
      repo: https://github.com/supabase/postgrest-csharp.git
    id: Headers
    path: Postgrest/ClientOptions.cs
    startLine: 10
  assemblies:
  - Postgrest
  namespace: Postgrest
  syntax:
    content: public Dictionary<string, string> Headers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Property Headers As Dictionary(Of String, String)
  overload: Postgrest.ClientOptions.Headers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Postgrest.ClientOptions.QueryParams
  commentId: P:Postgrest.ClientOptions.QueryParams
  id: QueryParams
  parent: Postgrest.ClientOptions
  langs:
  - csharp
  - vb
  name: QueryParams
  nameWithType: ClientOptions.QueryParams
  fullName: Postgrest.ClientOptions.QueryParams
  type: Property
  source:
    remote:
      path: Postgrest/ClientOptions.cs
      branch: master
      repo: https://github.com/supabase/postgrest-csharp.git
    id: QueryParams
    path: Postgrest/ClientOptions.cs
    startLine: 11
  assemblies:
  - Postgrest
  namespace: Postgrest
  syntax:
    content: public Dictionary<string, string> QueryParams { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Property QueryParams As Dictionary(Of String, String)
  overload: Postgrest.ClientOptions.QueryParams*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Postgrest
  commentId: N:Postgrest
  name: Postgrest
  nameWithType: Postgrest
  fullName: Postgrest
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Postgrest.ClientOptions.Schema*
  commentId: Overload:Postgrest.ClientOptions.Schema
  name: Schema
  nameWithType: ClientOptions.Schema
  fullName: Postgrest.ClientOptions.Schema
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Globalization.DateTimeStyles
  commentId: T:System.Globalization.DateTimeStyles
  parent: System.Globalization
  isExternal: true
  name: DateTimeStyles
  nameWithType: DateTimeStyles
  fullName: System.Globalization.DateTimeStyles
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Postgrest.ClientOptions.Headers*
  commentId: Overload:Postgrest.ClientOptions.Headers
  name: Headers
  nameWithType: ClientOptions.Headers
  fullName: Postgrest.ClientOptions.Headers
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Postgrest.ClientOptions.QueryParams*
  commentId: Overload:Postgrest.ClientOptions.QueryParams
  name: QueryParams
  nameWithType: ClientOptions.QueryParams
  fullName: Postgrest.ClientOptions.QueryParams
